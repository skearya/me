---
import Item from "./Item.astro";
import { getMalList, type MalList } from "./lists";
import { getEnvVar } from "../../utils";

const MAL_CLIENT_ID = getEnvVar(Astro, "MAL_CLIENT_ID");

const [animeList, mangaList] = (await Promise.all([
	getMalList(MAL_CLIENT_ID, "anime"),
	getMalList(MAL_CLIENT_ID, "manga"),
])) as [MalList, MalList];
---

<section class="overflow-hidden rounded-lg border">
	<div class="flex h-12 items-stretch justify-stretch divide-x border-b">
		<button
			id="anime-selector"
			class="selected w-full hover:bg-moonlightFocusMedium"
		>
			<h1>anime</h1>
		</button>
		<button
			id="manga-selector"
			class="w-full hover:bg-moonlightFocusMedium"
		>
			<h1>manga</h1>
		</button>
	</div>
	<div id="anime" class="h-[34rem] divide-y overflow-y-scroll">
		{animeList.map((anime) => <Item {...anime} />)}
	</div>
	<div id="manga" class="hidden h-[34rem] divide-y overflow-y-scroll">
		{mangaList.map((manga) => <Item {...manga} />)}
	</div>
</section>

<style>
	.selected {
		@apply bg-moonlightFocusHigh;
	}
</style>

<script>
	const animeSelector = document.getElementById("anime-selector")!;
	const mangaSelector = document.getElementById("manga-selector")!;
	const anime = document.getElementById("anime")!;
	const manga = document.getElementById("manga")!;

	animeSelector.addEventListener("click", () => {
		animeSelector.classList.add("selected");
		mangaSelector.classList.remove("selected");
		anime.classList.remove("hidden");
		manga.classList.add("hidden");
	});
	mangaSelector.addEventListener("click", () => {
		mangaSelector.classList.add("selected");
		animeSelector.classList.remove("selected");
		manga.classList.remove("hidden");
		anime.classList.add("hidden");
	});
</script>
